sp {arithmetic*propose*finish-problem
   (state <s> ^name arithmetic
              ^count <count>
              ^arithmetic-problem.current-column <c>)
   (<c> ^result
        ^next-column nil)
-->
   (<s> ^operator <op> + =)
   (<op> ^name finish-problem
         ^count <count>)
}

sp {arithmetic*apply*finish-problem*decrement-count
   (state <s> ^name arithmetic
              ^operator <o>
              ^arithmetic-problem <ap>
              ^count <c>)
   (<o>  ^name finish-problem
         ^count <c>)
-->
   (<s> ^arithmetic-problem <ap> -
        ^count <c> -
               (- <c> 1))
}

########## Print out problem and answer #############
#sp {arithmetic*apply*finish-problem*1column*result
#   (state <s> ^name arithmetic
#              ^output yes
#              ^operator <o>
#              ^arithmetic-problem <ap>)
#   (<o>  ^name finish-problem)
#   (<ap> ^one-column <oc>
#         ^operation-symbol <as>)
#   (<oc> ^digit1 <n1>
#         ^digit2 <n2>
#         ^result <n3>
#         ^next-column nil)
#-->
#   (write (crlf) (crlf) | | <n1> )
#   (write (crlf) <as> <n2> )
#   (write (crlf) |--|)
#   (write (crlf) | | <n3> )
#}
#sp {arithmetic*apply*finish-problem*2column*result
#   (state <s> ^name arithmetic
#              ^output yes
#              ^operator <o>
#              ^arithmetic-problem <ap>)
#   (<o>  ^name finish-problem)
#   (<ap> ^one-column <oc>
#         ^operation-symbol <as>)
#   (<oc> ^digit1 <n1>
#         ^digit2 <n2>
#         ^result <a1>
#         ^next-column <tc>)
#   (<tc> ^digit1 <n3>
#         ^digit2 <n4>
#         ^result <a2>
#         ^next-column nil)
#-->
#   (write (crlf) (crlf) | |   <n3> <n1> )
#   (write (crlf)  <as> <n4> <n2> )
#   (write (crlf) |---|)
#   (write (crlf) | |   <a2> <a1>)
#}
#
#sp {arithmetic*apply*finish-problem*3column*result
#   (state <s> ^name arithmetic
#              ^output yes
#              ^operator <o>
#              ^arithmetic-problem <ap>)
#   (<o>  ^name finish-problem)
#   (<ap> ^one-column <oc>
#         ^operation-symbol <as>)
#   (<oc> ^digit1 <n1>
#         ^digit2 <n2>
#         ^result <a1>
#         ^next-column <tc>)
#   (<tc> ^digit1 <n3>
#         ^digit2 <n4>
#         ^result <a2>
#         ^next-column <vc>)
#   (<vc> ^digit1 <n5>
#         ^digit2 <n6>
#         ^result <a3>
#         ^next-column nil)
#-->
#   (write (crlf) | |) 
#   (write (crlf) | |   <n5> <n3> <n1> )
#   (write (crlf)  <as> <n6> <n4> <n2> )
#   (write (crlf) |----|)
#   (write (crlf) | |   <a3> <a2> <a1>)
#}
#
#sp {arithmetic*apply*finish-problem*4column*result
#   (state <s> ^name arithmetic
#              ^output yes
#              ^operator <o>
#              ^arithmetic-problem <ap>)
#   (<o>  ^name finish-problem)
#   (<ap> ^one-column <oc>
#         ^operation-symbol <as>)
#   (<oc> ^digit1 <n1>
#         ^digit2 <n2>
#         ^result <a1>
#         ^next-column <tc>)
#   (<tc> ^digit1 <n3>
#         ^digit2 <n4>
#         ^result <a2>
#         ^next-column <vc>)
#   (<vc> ^digit1 <n5>
#         ^digit2 <n6>
#         ^result <a3>
#         ^next-column <uc>)
#   (<uc> ^digit1 <n7>
#         ^digit2 <n8>
#         ^result <a4>
#         ^next-column nil)
#-->
#   (write (crlf) | |)
#   (write (crlf) | |   <n7> <n5> <n3> <n1> )
#   (write (crlf)  <as> <n8> <n6> <n4> <n2> )
#   (write (crlf) |----|)
#   (write (crlf) | |  <a4> <a3> <a2> <a1>)
#}
